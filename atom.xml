<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Beyond The Corner]]></title>
  <link href="http://mramsden.github.com/atom.xml" rel="self"/>
  <link href="http://mramsden.github.com/"/>
  <updated>2012-09-29T02:28:47+01:00</updated>
  <id>http://mramsden.github.com/</id>
  <author>
    <name><![CDATA[Marcus Ramsden]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Customised UINavigationBar background in iOS 4 and 5]]></title>
    <link href="http://mramsden.github.com/blog/2011/11/02/customised-uinavigationbar-background-in-ios-4-and-5/"/>
    <updated>2011-11-02T00:00:00+00:00</updated>
    <id>http://mramsden.github.com/blog/2011/11/02/customised-uinavigationbar-background-in-ios-4-and-5</id>
    <content type="html"><![CDATA[<p>Recently I came across the situation that I needed to support a custom background for a UINavigationBar in an app that had to work for both iOS 4 and iOS 5. After some Googling I came up with this approach.</p>

<p>First the easy one, iOS 5;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">([[</span><span class="n">UINavigationBar</span> <span class="n">class</span><span class="p">]</span> <span class="nl">respondsToSelector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">appearance</span><span class="p">)])</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="nl">setBackgroundImage:</span><span class="n">navigationBackgroundImage</span> <span class="nl">forBarMetrics:</span><span class="n">UIBarMetricsDefault</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note the test on the navigation bar class to check if it supports the UI proxy extensions. This must be done in iOS 4 otherwise a crash will result.</p>

<p>Now for iOS 4 we have to create a category, fortunately this is very simple;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">UINavigationBar</span> <span class="nl">(CustomBackground)</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">UIImage</span> <span class="o">*</span><span class="n">navBackgroundImage</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;navigation-background&quot;</span><span class="p">]</span> <span class="nl">stretchableImageWithLeftCapWidth:</span><span class="mf">0.0</span> <span class="nl">topCapHeight:</span><span class="mf">0.0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">navBackgroundImage</span> <span class="nl">drawInRect:</span><span class="n">rect</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>drawRect:</code> method is not called in iOS 5 so it is safe to leave this category in your app. Just as a small side note, Apple has deprecated <code>strechableImageLeftCapWidth:topCapHeight:</code> in iOS 5 in favour of <code>resizableImageWithCapInsets:</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a URL query string using an NSDictionary]]></title>
    <link href="http://mramsden.github.com/blog/2011/05/14/creating-a-url-query-string-using-an-nsdictionary/"/>
    <updated>2011-05-14T00:00:00+01:00</updated>
    <id>http://mramsden.github.com/blog/2011/05/14/creating-a-url-query-string-using-an-nsdictionary</id>
    <content type="html"><![CDATA[<p>I finally got round to making this into a category. It&#8217;s a simple function for turning a dictionary into a query string, ready for appending to the end of a URL.</p>

<div><script src='https://gist.github.com/972328.js?file='></script>
<noscript><pre><code>#import &lt;Foundation/Foundation.h&gt;


@interface NSDictionary (QueryStringBuilder)

- (NSString *)queryString;

@end</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android development on OS X without Eclipse]]></title>
    <link href="http://mramsden.github.com/blog/2011/01/15/android-on-os-x-without-eclipse/"/>
    <updated>2011-01-15T00:00:00+00:00</updated>
    <id>http://mramsden.github.com/blog/2011/01/15/android-on-os-x-without-eclipse</id>
    <content type="html"><![CDATA[<p>I am finally getting started with playing around with some Android development and the first order of business is getting my development environment set up. I&#8217;m going to be doing most of my development on OS X using Apache Maven and Textmate, of course in your situation you could use your favourite text editor, I side more with vim fans ;) I&#8217;m making the assumption that the reader is comfortable with the terminal, additionally a dosage of no fear if you are following these steps.</p>

<h2>Homebrew</h2>

<p>To get the ball rolling we&#8217;re going to start with everyone&#8217;s favourite missing package manager, <a href="http://mxcl.github.com/homebrew/">Homebrew</a>. If you haven&#8217;t got Homebrew installed already then you&#8217;ll be glad to know that installation is pretty simple to do;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSLk https://gist.github.com/raw/323731/install_homebrew.rb)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you haven&#8217;t got Xcode installed yet this script will install it for you. If this is the case you may want to go get a drink as it may take some time.</p>

<h2>Android SDK</h2>

<p>Now that we have Homebrew installed we can get the Android SDK tools installed. Thanks to Homebrew this is a simple process and you don&#8217;t even have to visit a website, this appeals to the exceedingly lazy developer in me. Just go ahead and run;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install android
</span></code></pre></td></tr></table></div></figure>


<p>Once Homebrew has installed the Android SDK you can just straight away run the android command thanks to Homebrew setting everything up for you. So go ahead and run the Android SDK and AVD manager by running <code>android</code> on the command line. Then you can make your AVD and install the desired versions of the Android SDK. You may need to update your android tools since it appears that the Homebrew formula is a little out of date with the current version, but this is simple enough to do.</p>

<p>At this point let&#8217;s create an android project to make sure that everything is ready to go. I created a HelloAndroid application targeted for Android 2.1;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>android create project --package com.example.helloandroid <span class="se">\</span>
</span><span class='line'>  --activity HelloAndroid <span class="se">\</span>
</span><span class='line'>  --target 3 <span class="se">\</span>
</span><span class='line'>  --path &lt;path-to-project-folder&gt;/HelloAndroid
</span></code></pre></td></tr></table></div></figure>


<p>Then to make sure that everything is set up right and working fire up your Android emulator and then run <code>ant install</code>. Once this is done go ahead and make sure the app runs on the emulator. Assuming this works then run <code>ant uninstall</code> to uninstall the app from the emulator.</p>

<h2>Apache Maven</h2>

<p>Whilst I do prefer to avoid a full blown IDE I do like some automation in places and Apache Maven is a big old help with this. The first thing to do is get maven installed, again thanks to Homebrew this is simple;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install maven
</span></code></pre></td></tr></table></div></figure>


<p>Now we need to get the project set up with maven. We will be using the <a href="http://code.google.com/p/maven-android-plugin">Maven Android Plugin</a> to help us out. The first thing we need to do is remove the following files;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rm -r bin build.xml build.properties libs
</span></code></pre></td></tr></table></div></figure>


<p>Next we setup our environment for the Maven Android Plugin. We need to set a <code>ANDROID_HOME</code> environment variable. In .bash_profile add the following line;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">ANDROID_HOME</span><span class="o">=</span><span class="sb">`</span>brew --prefix android<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<p>Setting up the project for use with maven needs the following <code>pom.xml</code> file created in the root of the project;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span>
</span><span class='line'>  <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.example.helloandroid<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>helloandroid<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>apk<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>HelloAndroid<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.google.android<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>android<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.1.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;scope&gt;</span>provided<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sourceDirectory&gt;</span>src<span class="nt">&lt;/sourceDirectory&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>          <span class="nt">&lt;source&gt;</span>1.6<span class="nt">&lt;/source&gt;</span>
</span><span class='line'>          <span class="nt">&lt;target&gt;</span>1.6<span class="nt">&lt;/target&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>com.jayway.maven.plugins.android.generation2<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>maven-android-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sdk&gt;</span>
</span><span class='line'>            <span class="nt">&lt;path&gt;</span>${env.ANDROID_HOME}<span class="nt">&lt;/path&gt;</span>
</span><span class='line'>            <span class="nt">&lt;platform&gt;</span>1.6<span class="nt">&lt;/platform&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/sdk&gt;</span>
</span><span class='line'>          <span class="nt">&lt;emulator&gt;</span>
</span><span class='line'>             <span class="nt">&lt;avd&gt;</span>standard<span class="nt">&lt;/avd&gt;</span>
</span><span class='line'>             <span class="nt">&lt;wait&gt;</span>6000<span class="nt">&lt;/wait&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/emulator&gt;</span>
</span><span class='line'>          <span class="nt">&lt;deleteConflictingFiles&gt;</span>true<span class="nt">&lt;/deleteConflictingFiles&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;extensions&gt;</span>true<span class="nt">&lt;/extensions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/build&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once the <code>pom.xml</code> file is created then we can see if it is all set up right by running;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mvn <span class="nb">help</span>:describe -Dplugin<span class="o">=</span>android
</span></code></pre></td></tr></table></div></figure>


<p>Running this should give details about goals available for the android maven plugin. For reference here are the goals;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Name: Maven Android Plugin - maven-android-plugin
</span><span class='line'>Description: Maven Plugin <span class="k">for </span>Android
</span><span class='line'>Group Id: com.jayway.maven.plugins.android.generation2
</span><span class='line'>Artifact Id: maven-android-plugin
</span><span class='line'>Version: 2.8.3
</span><span class='line'>Goal Prefix: android
</span><span class='line'>
</span><span class='line'>This plugin has 16 goals:
</span><span class='line'>
</span><span class='line'>android:apk
</span><span class='line'>  Description: Creates the apk file. By default signs it with debug keystore.
</span><span class='line'>    Change that by setting configuration parameter
</span><span class='line'>    &lt;sign&gt;&lt;debug&gt;false&lt;/debug&gt;&lt;/sign&gt;.
</span><span class='line'>
</span><span class='line'>android:deploy
</span><span class='line'>  Description: Deploys the built apk file, or another specified apk, to a
</span><span class='line'>    connected device.
</span><span class='line'>    Automatically performed when running mvn integration-test <span class="o">(</span>or mvn install<span class="o">)</span>
</span><span class='line'>    on a project with instrumentation tests.
</span><span class='line'>
</span><span class='line'>android:deploy-dependencies
</span><span class='line'>  Description: Deploys all directly declared dependencies of &lt;<span class="nb">type</span>&gt;apk&lt;/type&gt;
</span><span class='line'>    in this project<span class="err">&#39;</span>s pom.
</span><span class='line'>    Usually used in a project with instrumentation tests, to deploy the apk to
</span><span class='line'>    <span class="nb">test </span>onto the device before running the deploying and running the
</span><span class='line'>    instrumentation tests apk.
</span><span class='line'>    Automatically performed when running mvn integration-test <span class="o">(</span>or mvn install<span class="o">)</span>
</span><span class='line'>    on a project with instrumentation tests.
</span><span class='line'>
</span><span class='line'>android:dex
</span><span class='line'>  Description: Converts compiled Java classes to the Android dex format.
</span><span class='line'>
</span><span class='line'>android:emulator-start
</span><span class='line'>  Description: EmulatorStartMojo can start the Android Emulator with a
</span><span class='line'>    specified Android Virtual Device <span class="o">(</span>avd<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>android:emulator-stop
</span><span class='line'>  Description: EmulatorStartMojo can stop the Android Emulator with a
</span><span class='line'>    specified Android Virtual Device <span class="o">(</span>avd<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>android:generate-sources
</span><span class='line'>  Description: Generates R.java based on resources specified by the resources
</span><span class='line'>    configuration parameter.
</span><span class='line'>    Generates java files based on aidl files.
</span><span class='line'>
</span><span class='line'>    If the configuration parameter deleteConflictingFiles is <span class="nb">true</span> <span class="o">(</span>which it is
</span><span class='line'>    by default<span class="o">)</span>, this goal has the following side-effects:
</span><span class='line'>    - deletes any R.java files found in the <span class="nb">source </span>directory.
</span><span class='line'>    - deletes any .java files with the same name as an .aidl file found in the
</span><span class='line'>      <span class="nb">source </span>directory.
</span><span class='line'>    - deletes any Thumbs.db files found in the resource directory.
</span><span class='line'>
</span><span class='line'>android:instrument
</span><span class='line'>  Description: Runs the instrumentation apk on device.
</span><span class='line'>
</span><span class='line'>android:internal-integration-test
</span><span class='line'>  Description: Internal. Do not use.
</span><span class='line'>    Called automatically when the lifecycle reaches phase integration-test.
</span><span class='line'>    Figures out whether to call goals in this phase; and <span class="k">if </span>so, calls
</span><span class='line'>    android:instrument.
</span><span class='line'>
</span><span class='line'>android:internal-pre-integration-test
</span><span class='line'>  Description: Internal. Do not use.
</span><span class='line'>    Called automatically when the lifecycle reaches phase pre-integration-test.
</span><span class='line'>    Figures out whether to call goals in this phase; and <span class="k">if </span>so, calls
</span><span class='line'>    android:deploy-dependencies and android:deploy.
</span><span class='line'>
</span><span class='line'>android:pull
</span><span class='line'>  Description: Copy file/dir from device.
</span><span class='line'>
</span><span class='line'>android:push
</span><span class='line'>  Description: Copy file/dir to device.
</span><span class='line'>
</span><span class='line'>android:redeploy
</span><span class='line'>  Description: Redeploys the built apk file, or another specified apk, to a
</span><span class='line'>    connected device. This simply tries to undeploy the APK and re-deploy it.
</span><span class='line'>
</span><span class='line'>android:undeploy
</span><span class='line'>  Description: Undeploys the built apk file, or another specified apk, from a
</span><span class='line'>    connected device.
</span><span class='line'>
</span><span class='line'>android:unpack
</span><span class='line'>  Description: unpack library.
</span><span class='line'>
</span><span class='line'>android:zipalign
</span><span class='line'>  Description: ZipalignMojo can run the zipalign <span class="nb">command </span>against the apk.
</span></code></pre></td></tr></table></div></figure>


<p>If you see that then you are all set and ready to go. I&#8217;m hoping to get some more blog posts up about my development exploits on android. If you want to read more about the maven android plugin then have a look at their website <a href="http://code.google.com/p/maven-android-plugin">http://code.google.com/p/maven-android-plugin</a>.</p>

<p><strong>Update 1:</strong> I did have some troubles with the <code>android:emulator-start</code> goal. But it turned out I had missed the emulator block in the maven-android-plugin configuration block. Found this information in <a href="http://www.sonatype.com/books/mvnref-book/reference/android-dev-sect-custom-details.html">Sonatype&#8217;s Maven Reference Guide</a>. Also I corrected a typo in the pom.xml definition.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VirtualBox SDK Machine Status]]></title>
    <link href="http://mramsden.github.com/blog/2010/04/22/virtualbox-sdk-machine-status/"/>
    <updated>2010-04-22T00:00:00+01:00</updated>
    <id>http://mramsden.github.com/blog/2010/04/22/virtualbox-sdk-machine-status</id>
    <content type="html"><![CDATA[<p>I have taken to using VirtualBox in my day to day development work. The reason for this is it provides a nicely isolated development sandbox which I can go ahead and clutter up with the usual tools, then when things go wrong I just have to trash the machine and clone from an existing image that I have pre-made. So far this has made life much easier for me.</p>

<p>My preferred approach to running my machines is to start them up in headless mode and then shell into them using a static IP assigned through the VirtualBox host-only network. The only issue with using headless mode is that there is potentially no indication of the state of the machine, basically when can I shell into my machine? Since I was already using conky to report the status of my host machine I thought that I would add to my conkyrc so that I could see the state of play with regards to VirtualBox and the machines available to it.</p>

<p>I decided to make use of the <a href="http://dlc.sun.com/virtualbox/vboxsdkdownload.html">VirtualBox Python SDK</a> to write a small application that can report on the status of my machines. The deb installation of VirtualBox supplied by Sun/Oracle contains the SDK as well, I am unsure if this is the case for the version of VirtualBox OSE available on the Ubuntu repositories. Also I don&#8217;t know what the state of play is with other linux distributions. You may want to download the SDK anyway as this includes all of the documentation for using the API.</p>

<p>So with that out the way onto the script that I created to report the status of my machines;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">vboxapi</span> <span class="kn">import</span> <span class="n">VirtualBoxManager</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">getopt</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">opts</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="n">getopt</span><span class="o">.</span><span class="n">getopt</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;conky&#39;</span><span class="p">,</span> <span class="s">&#39;vbox-version&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">useConky</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'><span class="k">for</span> <span class="n">o</span><span class="p">,</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">opts</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">o</span> <span class="o">==</span> <span class="s">&#39;--conky&#39;</span><span class="p">:</span>
</span><span class='line'>                <span class="n">useConky</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'><span class="n">virtualBoxManager</span> <span class="o">=</span> <span class="n">VirtualBoxManager</span><span class="p">(</span><span class="s">&#39;XPCOM&#39;</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'><span class="n">virtualBox</span> <span class="o">=</span> <span class="n">virtualBoxManager</span><span class="o">.</span><span class="n">vbox</span>
</span><span class='line'><span class="k">for</span> <span class="n">o</span><span class="p">,</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">opts</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">o</span> <span class="o">==</span> <span class="s">&#39;--vbox-version&#39;</span><span class="p">:</span>
</span><span class='line'>                <span class="k">print</span> <span class="n">virtualBox</span><span class="o">.</span><span class="n">version</span>
</span><span class='line'>                <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">machines</span> <span class="o">=</span> <span class="n">virtualBox</span><span class="o">.</span><span class="n">getMachines</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span> <span class="n">machine</span> <span class="ow">in</span> <span class="n">machines</span><span class="p">:</span>
</span><span class='line'>        <span class="n">machineName</span> <span class="o">=</span> <span class="n">machine</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>        <span class="n">machineStatus</span> <span class="o">=</span> <span class="s">&quot;null&quot;</span>
</span><span class='line'>        <span class="n">machineStatuses</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>                <span class="mi">0</span><span class="p">:</span> <span class="s">&#39;null&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">1</span><span class="p">:</span> <span class="s">&#39;${color red}powered off$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;powered off&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">2</span><span class="p">:</span> <span class="s">&#39;${color red}saved$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;saved&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">3</span><span class="p">:</span> <span class="s">&#39;${color yellow}teleported$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;teleported&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">4</span><span class="p">:</span> <span class="s">&#39;${color red}aborted$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;aborted&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">5</span><span class="p">:</span> <span class="s">&#39;${color green}running$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;running&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">6</span><span class="p">:</span> <span class="s">&#39;${color yellow}paused$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;paused&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">7</span><span class="p">:</span> <span class="s">&#39;${color red}stuck$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;stuck&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">8</span><span class="p">:</span> <span class="s">&#39;${color blue}teleporting$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;teleporting&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">9</span><span class="p">:</span> <span class="s">&#39;${color blue}live snapshotting$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;live snapshotting&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">10</span><span class="p">:</span> <span class="s">&#39;${color blue}starting$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;starting&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">11</span><span class="p">:</span> <span class="s">&#39;${color blue}stopping$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;stopping&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">12</span><span class="p">:</span> <span class="s">&#39;${color blue}saving$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;saving&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="mi">13</span><span class="p">:</span> <span class="s">&#39;${color blue}restoring$color&#39;</span> <span class="k">if</span> <span class="n">useConky</span> <span class="k">else</span> <span class="s">&#39;restoring&#39;</span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>        <span class="n">machineStatus</span> <span class="o">=</span> <span class="n">machineStatuses</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">machine</span><span class="o">.</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="n">machineName</span><span class="p">,</span> <span class="s">&quot;-&quot;</span><span class="p">,</span> <span class="n">machineStatus</span>
</span></code></pre></td></tr></table></div></figure>


<p>This script will accept the following arguments when executed;</p>

<pre>
virtualboxstatus [--conky] [--vbox-version]

  --conky
    Adds any additional colors for conky to render.

  --vbox-version
    Displays the installed version of VirtualBox then exits.
</pre>


<p>Once this script is made we just need to add it to our conkyrc in order to render the status of our machines. In my conkyrc I added the following;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>${color red}VIRTUALBOX STATUS$color - Version ${execpi 600 ~/bin/virtualboxstatus --vbox-version}
</span><span class='line'>${execpi 1 ~/bin/virtualboxstatus --conky}</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zend Framework and Twig]]></title>
    <link href="http://mramsden.github.com/blog/2009/10/13/zend-framework-and-twig/"/>
    <updated>2009-10-13T00:00:00+01:00</updated>
    <id>http://mramsden.github.com/blog/2009/10/13/zend-framework-and-twig</id>
    <content type="html"><![CDATA[<p><strong>Update</strong> It looks like I should keep a closer eye on the mailing lists for new projects. Some people have already started to look into integrating Twig with the Zend Framework. The thread can be found in the group <a href="http://groups.google.com/group/twig-users/browse_thread/thread/41cf9e3cad767dad">here</a>.</p>

<p>I have a small confession to make. Whilst I do love the Zend Framework I have been seeing other frameworks and indeed languages behind it&#8217;s back. One of these frameworks include Django for Python. Admittedly every time I start up in a new framework I do always seem to come back to the Zend Framework fold but I guess that must be down to the fact that I just prefer PHP, it&#8217;s where I feel comfortable.</p>

<p>There was one feature that stuck with me about Django though, and that was it&#8217;s template language. I found this to be very enjoyable to do, and to be honest in my view of things using PHP as my template language wasn&#8217;t cutting it anymore in my books. I suspect that some people will strongly disagree with my arguments but then again this is what I feel is the beauty of PHP, there are so many tools out there that I can make them fit with my preferred style.</p>

<p>Fortunately the Symfony crowd have come to the rescue with, what I think is, a nice little template language called <a href="http://www.twig-project.org/">Twig</a>. It resembles the style of templates found in Django with curly braces all over the place rather than PHP tags, plus it lets you include blocks of templates in with other templates. Additionally since the template language is very similar in both form and function to the Django template language anyone coming over shouldn&#8217;t have any problems settling in on the template front.</p>

<p>I have been getting stuck into more features of the Zend Framework and thought that it would be fun to write an integration layer so that Twig can be used in Zend Framework. The solution I came up with works for default views and views contained inside modules.</p>

<p>To start with I created a wrapper around the main Twig_Environment class. This class is responsible for loading a template and then rendering it with the supplied data.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ZExt_Twig</span> <span class="k">extends</span> <span class="nx">Zend_View_Abstract</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="nv">$_twig</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nv">$applicationRoot</span><span class="p">,</span> <span class="nv">$modulesDir</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nv">$twigLoader</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ZExt_Twig_Loader</span><span class="p">(</span><span class="nv">$applicationRoot</span><span class="p">,</span> <span class="nv">$modulesDir</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_twig</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Twig_Environment</span><span class="p">(</span><span class="nv">$twigLoader</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">protected</span> <span class="k">function</span> <span class="nf">_run</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nv">$template</span> <span class="o">=</span> <span class="nb">func_get_arg</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nv">$template</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getVars</span><span class="p">());</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">protected</span> <span class="k">function</span> <span class="nf">_script</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_twig</span><span class="o">-&gt;</span><span class="na">loadTemplate</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>I will come onto the ZExt_Twig_Loader class shortly. The two methods <em>run and </em>script are both overriden methods from Zend_View_Abstract. These get called when the render method of the parent class get&#8217;s called. The <em>script function is responsible for loading the appropriate Twig template and then returning it.
The </em>run method is called when we are ready to hand off to the Twig rendering engine. The first argument to this method should be the template object that was returned by the _script method. Note that when the render method is being called we are passing in an array of any data that might have been assigned to the view.</p>

<p>Next the ZExt_Twig_Loader class is responsible for loading the appropriate template file from the standard Zend Framework application directory structure.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ZExt_Twig_Loader</span> <span class="k">extends</span> <span class="nx">Twig_Loader</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="sd">/**</span>
</span><span class='line'><span class="sd">  * @var string</span>
</span><span class='line'><span class="sd">  */</span>
</span><span class='line'>  <span class="k">private</span> <span class="nv">$_applicationRoot</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="sd">/**</span>
</span><span class='line'><span class="sd">  * @var string</span>
</span><span class='line'><span class="sd">  */</span>
</span><span class='line'>  <span class="k">private</span> <span class="nv">$_modulesDir</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="sd">/**</span>
</span><span class='line'><span class="sd">  * @var string</span>
</span><span class='line'><span class="sd">  */</span>
</span><span class='line'>  <span class="k">private</span> <span class="nv">$_viewsDir</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="sd">/**</span>
</span><span class='line'><span class="sd">  * Constructor.</span>
</span><span class='line'><span class="sd">  *</span>
</span><span class='line'><span class="sd">  * @param string    $applicationRoot The application root.</span>
</span><span class='line'><span class="sd">  * @param string    $modulesDir The directory where all modules are found.</span>
</span><span class='line'><span class="sd">  * @param string    $viewsDir The path where views should be located in both the application root and</span>
</span><span class='line'><span class="sd">  * modules directory.</span>
</span><span class='line'><span class="sd">  * @param string    $cache The compiler cache directory.</span>
</span><span class='line'><span class="sd">  * @param boolean   $autoReload Whether to reload the template if the orginal source changed.</span>
</span><span class='line'><span class="sd">  *</span>
</span><span class='line'><span class="sd">  * @see Twig_Loader</span>
</span><span class='line'><span class="sd">  */</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nv">$applicationRoot</span><span class="p">,</span> <span class="nv">$modulesDir</span><span class="p">,</span> <span class="nv">$viewsDir</span> <span class="o">=</span> <span class="s2">&quot;/views/scripts&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nv">$cache</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$autoReload</span> <span class="o">=</span> <span class="k">true</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setApplicationRoot</span><span class="p">(</span><span class="nv">$applicationRoot</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setModulesDir</span><span class="p">(</span><span class="nv">$modulesDir</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setViewsDir</span><span class="p">(</span><span class="nv">$viewsDir</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$cache</span><span class="p">,</span> <span class="nv">$autoReload</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="sd">/**</span>
</span><span class='line'><span class="sd">  * Returns the source of the next view to load based on the supplied name.</span>
</span><span class='line'><span class="sd">  * The name in this instance should take the form &#39;module/controller/action&#39;,</span>
</span><span class='line'><span class="sd">  * &#39;controller/action&#39;, or just &#39;action&#39;.</span>
</span><span class='line'><span class="sd">  * </span>
</span><span class='line'><span class="sd">  * @param string    $name The view to load.</span>
</span><span class='line'><span class="sd">  * </span>
</span><span class='line'><span class="sd">  * @return array An array consisting of the source code as the first element, and</span>
</span><span class='line'><span class="sd">  * the last modification time as the second one or false if it&#39;s not relevant.</span>
</span><span class='line'><span class="sd">  */</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getSource</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nv">$name</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_parseName</span><span class="p">(</span><span class="nv">$name</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$templateFilePath</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getApplicationRoot</span><span class="p">();</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_null</span><span class="p">(</span><span class="nv">$name</span><span class="p">[</span><span class="s1">&#39;module&#39;</span><span class="p">]))</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="nv">$templateFilePath</span> <span class="o">.=</span> <span class="nx">DIRECTORY_SEPARATOR</span><span class="o">.</span><span class="nv">$name</span><span class="p">[</span><span class="s1">&#39;module&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">$templateFilePath</span> <span class="o">.=</span> <span class="nx">DIRECTORY_SEPARATOR</span><span class="o">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getViewsDir</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$templateFilePath</span> <span class="o">.=</span> <span class="nx">DIRECTORY_SEPARATOR</span><span class="o">.</span><span class="nv">$name</span><span class="p">[</span><span class="s1">&#39;controller&#39;</span><span class="p">]</span><span class="o">.</span><span class="nx">DIRECTORY_SEPARATOR</span><span class="o">.</span><span class="nv">$name</span><span class="p">[</span><span class="s1">&#39;action&#39;</span><span class="p">]</span><span class="o">.</span><span class="nv">$name</span><span class="p">[</span><span class="s1">&#39;extension&#39;</span><span class="p">];</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">file_exists</span><span class="p">(</span><span class="nv">$templateFilePath</span><span class="p">))</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nx">Zend_Exception</span><span class="p">(</span><span class="s2">&quot;The template file </span><span class="si">$templateFilePath</span><span class="s2"> does not exist.&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nb">error_log</span><span class="p">(</span><span class="nv">$templateFilePath</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">array</span><span class="p">(</span><span class="nb">file_get_contents</span><span class="p">(</span><span class="nv">$templateFilePath</span><span class="p">),</span> <span class="nb">filemtime</span><span class="p">(</span><span class="nv">$templateFilePath</span><span class="p">));</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getViewsDir</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_viewsDir</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">setViewsDir</span><span class="p">(</span><span class="nv">$viewsDir</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_viewsDir</span> <span class="o">=</span> <span class="nv">$viewsDir</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getApplicationRoot</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_applicationRoot</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">setApplicationRoot</span><span class="p">(</span><span class="nv">$applicationRoot</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_applicationRoot</span> <span class="o">=</span> <span class="nv">$applicationRoot</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getModulesDir</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_modulesDir</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">setModulesDir</span><span class="p">(</span><span class="nv">$modulesDir</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_modulesDir</span> <span class="o">=</span> <span class="nv">$modulesDir</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="k">function</span> <span class="nf">_parseName</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nv">$matches</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nb">preg_match</span><span class="p">(</span><span class="s2">&quot;/(\..*)$/&quot;</span><span class="p">,</span> <span class="nv">$name</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$name</span> <span class="o">=</span> <span class="nx">substr</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">strpos</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span>
</span><span class='line'>      <span class="nv">$parsedName</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;module&#39;</span> <span class="o">=&gt;</span> <span class="k">null</span><span class="p">,</span> <span class="s1">&#39;controller&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="s1">&#39;action&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="s1">&#39;extension&#39;</span> <span class="o">=&gt;</span> <span class="nv">$matches</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>      <span class="nv">$parts</span> <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="nv">$name</span><span class="p">);</span>
</span><span class='line'>      <span class="k">switch</span> <span class="p">(</span><span class="nb">sizeof</span><span class="p">(</span><span class="nv">$parts</span><span class="p">))</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>              <span class="nv">$parsedName</span><span class="p">[</span><span class="s1">&#39;module&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">array_shift</span><span class="p">(</span><span class="nv">$parts</span><span class="p">);</span>
</span><span class='line'>          <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>              <span class="nv">$parsedName</span><span class="p">[</span><span class="s1">&#39;controller&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">array_shift</span><span class="p">(</span><span class="nv">$parts</span><span class="p">);</span>
</span><span class='line'>          <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>              <span class="nv">$parsedName</span><span class="p">[</span><span class="s1">&#39;action&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">array_shift</span><span class="p">(</span><span class="nv">$parts</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="nv">$parsedName</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>The main method of interest from this class is ZExt_Twig_Loader::getSource. This method is called by the Twig environment when ZExt_Twig::loadTemplate is called. This function then parses the file name passed to it and returns an array containing an array of all the lines in the template file and the time the file was last modified. The template is then parsed by the Twig template engine.</p>

<p>Finally to get this all working I added the following function to the bootstrap</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">_initTwigView</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nv">$twigView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ZExt_Twig</span><span class="p">(</span><span class="nx">APPLICATION_PATH</span><span class="p">,</span> <span class="nx">APPLICATION_PATH</span><span class="o">.</span><span class="s2">&quot;/modules&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$viewRenderer</span> <span class="o">=</span> <span class="nx">Zend_Controller_Action_HelperBroker</span><span class="o">::</span><span class="na">getStaticHelper</span><span class="p">(</span><span class="s2">&quot;ViewRenderer&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$viewRenderer</span><span class="o">-&gt;</span><span class="na">setView</span><span class="p">(</span><span class="nv">$twigView</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nv">$twigView</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>This now means that a Twig template view will be loaded instead of the default Zend_View style template.</p>

<p>There are still a few aspects I have to try out with this approach such as the availability of view helpers and whether I can include other templates using the Twig engine syntax, or if I will still have to use Zend Framework helpers to achieve this. Finally I need to tidy up some of the method signatures as there are some such as the ZExt_Twig_Loader constructor that have parameters which cannot be assigned.</p>

<p>All of the code in this article is available on <a href="http://gist.github.com/264227">GitHub</a>.</p>

<p>Any suggestions for improvements would be appreciated :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PEAR Update Issues On Snow Leopard]]></title>
    <link href="http://mramsden.github.com/blog/2009/10/09/pear-update-issues-on-snow-leopard/"/>
    <updated>2009-10-09T00:00:00+01:00</updated>
    <id>http://mramsden.github.com/blog/2009/10/09/pear-update-issues-on-snow-leopard</id>
    <content type="html"><![CDATA[<p>So I just came across some weirdness on my default install of PHP on Snow Leopard. I wanted to install the latest version of PHPUnit in order to carry out some testing, but it was asking me to update PEAR.</p>

<p>So I ran the usual PEAR update command;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo pear upgrade pear
</span></code></pre></td></tr></table></div></figure>


<p>This appeared to run without any issues. But subsequently whenever I attempted to run PEAR I was greeted with the following error message;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/local/bin/pear: fork: Resource temporarily unavailable
</span></code></pre></td></tr></table></div></figure>


<p>I took a look inside the offending file as it is just a simple command to run the PEAR script. It looked like this;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pear /usr/lib/php/pearcmd.php
</span></code></pre></td></tr></table></div></figure>


<p>Obviously the script was infinitely attempting to spawn itself causing the resource temporarily unavailable error. So the simple fix was to change the script to the following;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php /usr/lib/php/pearcmd.php <span class="nv">$@</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&#8217;m not quite sure why the script changed when I upgraded but it appeared to. I figured I should pop this note up in case anyone else gets caught out, or indeed I forget and get caught out again. Any insight on why this might have happened would be appreciated.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pretty URLs with EPrints]]></title>
    <link href="http://mramsden.github.com/blog/2009/09/21/pretty-urls-with-eprints/"/>
    <updated>2009-09-21T00:00:00+01:00</updated>
    <id>http://mramsden.github.com/blog/2009/09/21/pretty-urls-with-eprints</id>
    <content type="html"><![CDATA[<p>Recently I have been working on a project which was focused on adding Homepages and Profiles for users to EPrints repositories called MicroViews. Currently when a user logs into an EPrints repository all you are presented with is your Manage Deposits page. With MicroViews the user will be presented with a Homepage which provides them with various pieces of information about the repository which is relevant to them, for example what are their most popular publications and if there are any issues with their publications that have been raised at the last audit.</p>

<p>The extension also adds a profile page to EPrints for each user. The idea of profile pages is to provide a static external facing page which the rest of the world can see. This page would include basic information about the user and the publications they have added to the repository. This effectively provides a biography of the user with regards to the repository.</p>

<p>One thing that we wanted to do is create pretty URLs for the user profiles of the form http://examplerepository.com/profile/. Initially we did this by making a modification to perl_lib/EPrints/Apache/Rewrite.pm but this was not the ideal situation for a plugin since this is a modification to the core code of EPrints. The problem with this approach is that if the repository administrator went on to update their core EPrints install then they would end up losing the hand made modification which is required for the plugin and they would have to add it again.</p>

<p>Instead we investigated creating a custom URL handler and adding it to the request handling chain using archives/ARCHIVEID/cfg/apachevhosts.conf. By doing this we won&#8217;t change any core EPrints code and all of the changes will be safe from any auto generated changes. The first thing we did was create a custom rewrite handler which took the following shape;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">EPrints::Plugin::MePrints::Apache::</span><span class="n">Rewrite</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">our</span> <span class="nv">@ISA</span> <span class="o">=</span> <span class="sx">qw/ EPrints::Plugin /</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nn">EPrints::Apache::</span><span class="n">AnApache</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">handler</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">my</span><span class="p">(</span> <span class="nv">$r</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>  <span class="k">my</span> <span class="nv">$uri</span> <span class="o">=</span> <span class="nv">$r</span><span class="o">-&gt;</span><span class="n">uri</span><span class="p">;</span>
</span><span class='line'>  <span class="k">my</span> <span class="nv">$repository_id</span> <span class="o">=</span> <span class="nv">$r</span><span class="o">-&gt;</span><span class="n">dir_config</span><span class="p">(</span> <span class="s">&quot;EPrints_ArchiveID&quot;</span> <span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="nb">defined</span> <span class="nv">$repository_id</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">DECLINED</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">my</span> <span class="nv">$repository</span> <span class="o">=</span> <span class="nn">EPrints::</span><span class="n">Repository</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$repository_id</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="nv">$uri</span> <span class="o">=~</span> <span class="sr">m! ^\/profile\/([0-9a-zA-Z]+)$ !x</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1"># Find the user and if found set the appropriate filename for the response object.</span>
</span><span class='line'>    <span class="c1"># If the user is not found then don&#39;t do anything or return anything and this will</span>
</span><span class='line'>    <span class="c1"># cause EPrints to respond with a 404 error.</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">DECLINED</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next we needed to add only one line to the archves/ARCHIVEID/cfg/apachevhost.conf file;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">PerlTransHandler</span> <span class="nn">EPrints::Plugin::MePrints::Apache::</span><span class="n">Rewrite</span>
</span></code></pre></td></tr></table></div></figure>


<p>After a server reset we had the pretty URLs for the profile pages. This works thanks to the PerlTransHandler statement in the apachevhost.conf file. What this does is add a handler to the chain of handlers to be run. By default in EPrints there is only one handler and that is the default one. What we have done with the change above is add a handler into the chain before that. The handler method in EPrints::Plugin::MePrints::Apache::Rewrite gets called and if it gets a match for profile then it goes ahead and handles it. The &#8220;return DECLINED&#8221; tells Apache that it should move onto the next URI translation handler in the chain.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prototype Element Update Confusion]]></title>
    <link href="http://mramsden.github.com/blog/2009/08/05/prototype-element-update-confusion/"/>
    <updated>2009-08-05T00:00:00+01:00</updated>
    <id>http://mramsden.github.com/blog/2009/08/05/prototype-element-update-confusion</id>
    <content type="html"><![CDATA[<p>At work we are currently working on reimplementing a piece of software called SNEEP. SNEEP is a plugin for repository software called EPrints which is developed at the University of Southampton. According to the <a href="http://roar.eprints.org">Registry of Open Access Repositories (ROAR)</a> EPrints currently has 333 installations around the world as of 6th August 2009. As part of the SNEEP plugin we have been adding in the ability to edit comments and notes using AJAX meaning that users don’t have to leave the deposit page to author their comments or notes.</p>

<p>EPrints comes with the <a href="http://prototypejs.org">Prototype</a> and <a href="http://script.aculo.us/">Scriptaculous</a> JavaScript libraries installed so we had to use these as opposed to my regular choice of <a href="http://jquery.com">jQuery</a>. Owing to the static approach used for generating the document views in EPrints we had to inject the whole comments section of the document using AJAX. We did this by having the server generate the DOM and then sending it back to the browser which injects it into the page. This way the page can dynamically load the comments box depending on if a user is logged in or not.</p>

<p>Initially we managed to get the code running with Firefox and Safari but we had no joy with the code in IE. Here is some of the code that was originally used.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">sneepCommentFormInit</span><span class="p">(</span><span class="nx">transport</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Load in the HTML generated by the server side script</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;ep_sneep_main&#39;</span><span class="p">).</span><span class="nx">update</span><span class="p">(</span><span class="nx">transport</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// If the server sent back a form so the user can write a new comment</span>
</span><span class='line'>  <span class="c1">// then we need to remove the old submit button and add one which is</span>
</span><span class='line'>  <span class="c1">// attached to one of our JavaScript functions.</span>
</span><span class='line'>  <span class="nx">$$</span><span class="p">(</span><span class="s2">&quot;.ep_sneep_comment_form_container&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">submitButton</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">submitButton</span><span class="p">.</span><span class="nx">writeAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span> <span class="s2">&quot;button&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">submitButton</span><span class="p">.</span><span class="nx">writeAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="s2">&quot;sneep_comment_submit&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">submitButton</span><span class="p">.</span><span class="nx">writeAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;sneep_comment_submit&quot;</span><span class="p">).</span><span class="nx">readAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">));</span>
</span><span class='line'>    <span class="nx">submitButton</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">sneepCommentFormSubmit</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;sneep_comment_submit&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">element</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">submitButton</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">inputcallback</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">inputcallback</span><span class="p">.</span><span class="nx">writeAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span> <span class="s2">&quot;hidden&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">inputcallback</span><span class="p">.</span><span class="nx">writeAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;callback&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">inputcallback</span><span class="p">.</span><span class="nx">writeAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span> <span class="s2">&quot;1&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">element</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">inputcallback</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Event</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span> <span class="s1">&#39;load&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">rm</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(https?:\/\/.*)\/(\d+)\/?/</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">rm</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">new</span> <span class="nx">Ajax</span><span class="p">.</span><span class="nx">Request</span><span class="p">(</span><span class="nx">rm</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;/cgi/sneep/view_sneep?eprintid=&#39;</span><span class="o">+</span><span class="nx">rm</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&amp;amp;type=comment&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;get&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">onCreate</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Put up a loading message</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">onComplete</span><span class="o">:</span> <span class="nx">sneepCommentFormInit</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The problem appeared to be that IE does not finish loading the updated content before attempting to add the hidden field and attaching a new submit button which calls our client side method rather than allowing the form to submit straight back to the server.</p>

<p>The solution we chose for this issue was to modify the initial on load function in the following way;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">Event</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span> <span class="s1">&#39;load&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">rm</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(https?:\/\/.*)\/(\d+)\/?/</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">rm</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">new</span> <span class="nx">Ajax</span><span class="p">.</span><span class="nx">Request</span><span class="p">(</span><span class="nx">rm</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;/cgi/sneep/view_sneep?eprintid=&#39;</span><span class="o">+</span><span class="nx">rm</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&amp;amp;type=comment&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;get&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">onCreate</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Put up a loading message</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">onComplete</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">transport</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;ep_sneep_main&#39;</span><span class="p">).</span><span class="nx">update</span><span class="p">(</span><span class="nx">transport</span><span class="p">.</span><span class="nx">responseText</span><span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;&lt;script type=\&quot;text/javascript\&quot;&gt;&quot;</span><span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;sneepCommentFormInit();&quot;</span><span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;&lt;/script&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Basically in this code we removed the code from sneepCommentFormInit() that handles the returned text and put it inside the anonymous onComplete method. We also appended some JavaScript that gets executed as soon as it is evaluated. This means that the form initialization code is only run once all of the HTML has been interpreted and loaded meaning that IE now has the submit intercept function correctly attached.</p>
]]></content>
  </entry>
  
</feed>
